---
title: "STAT 331 Group Project"
author: "Zachary Weinfeld, Gabby Low, Brett Kuwahara, Shea Tennison"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: false
  message: false
  warning: false
---
# 1. Project Proposal + Data

### We will analyze the correlation between life expectancy and the mean years 15-24 year old women are in school across different countries.

```{r setup}
library(broom)
library(tidyverse)
library(knitr)
library(kableExtra)
library(gridExtra)

life_expectancy <- read.csv("Data/life_expectancy.csv")
school_years <- read.csv("Data/mean_years_in_school_women_15_to_24_years.csv")
set.seed(27)
```

### Data Description

Life expectancy contains data about the expected lifespan of person. This is broken down by country and year, where each observation is a country and each variable is a year. Similarly, school years contains data about the average number of years women from the ages 15 to 24 are in school. Again, this data is broken down by country and year, where each observation is a country and each variable is a year.

### Data Cleaning Process

Fortunately, Gapminder put the data in a very clean format. However, there is much more data available for life expectancy than there is for school years. For life expectancy, data is available for every year from 1800 through 2100 (projection), but for school years, there is only data available for the years 1970 through 2015. For these years, we are fortunate enough to say there is no missing data whatsoever. This makes out data cleaning process relatively simple. Thus, we will focus on only the years 1970 through 2015. Additionally, when the data was read into R, the columns (years) were given a prefix of "X". For example, the column labeled 1970 became X1970. We removed the leading X.

```{r}
life_expectancy_clean <- life_expectancy |>
  rename_with(~str_remove(., pattern = "X"), X1970:X2015) |>
  select(country, `1970`:`2015`)

school_years_clean <- school_years |>
  rename_with(~str_remove(., pattern = "X"), X1970:X2015)
```

```{r}
life_expectancy_long <- life_expectancy_clean |>
  pivot_longer(cols = `1970`:`2015`,
               names_to = "year",
               values_to = "life_expectancy")

school_years_long <- school_years_clean |>
  pivot_longer(cols = `1970`:`2015`,
               names_to = "year",
               values_to = "years_in_school")
```

```{r}
joined_data <- life_expectancy_long |>
  full_join(school_years_long, by=c("country", "year")) |>
  drop_na()
```

### Hypothesized Relationship

We assume there will be a positive correlation between the two variables. A [study](https://news.yale.edu/2020/02/20/want-live-longer-stay-school-study-suggests#:~:text=Each%20educational%20step%20obtained%20led,are%20powerful%2C%E2%80%9D%20Roy%20said.) done by Yale University concluded that, on average, "Each educational step obtained led to 1.37 fewer years of lost life expectancy." We expect our results to be consistent with the Yale study's findings. Additionally, as an educated guess, it seems intuitive that countries with more women in school will have higher life expectancy; this may be due to other lurking variables, however. Both of these variables are likely correlated with the degree to how developed the country is. For example, a more developed country such as the US may have a long life expectancy *and* a high schooling rate in parallel, whereas a less developed country may have both of these values lower in

# 2. Linear Regression

### Data Visualization and Relationship

```{r}

relationship_plot <- joined_data |>
  ggplot(aes(x= years_in_school, y = life_expectancy, alpha = 0.15)) + 
  geom_point(color = "darkcyan", show.legend = FALSE) + 
  labs(x="Mean Years in School", y="", title = "Life Expectancy vs Years in School", subtitle = "Life Expectancy")

relationship_plot
```

For the above plot, we choose to include all of the data because, while it is a large amount of data, the general shape of the pattern that the data points follow is informative.

### Change in Variables over Time

```{r}

rescale_01 <- function(x){
  stopifnot(is.numeric(x), length(x) > 1)
  x = (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}

# 2 
time_plot <- joined_data |>
  group_by(year) |>
  summarize(mean_life = mean(life_expectancy), 
            mean_school = mean(years_in_school, na.rm = TRUE)) |>
  mutate(std_life = rescale_01(mean_life), 
         std_school = rescale_01(mean_school)) |>
  ggplot() + 
  geom_line(aes(x= year, y = std_life, group = 1, color = "darkseagreen")) + 
  geom_line(aes(x= year, y = std_school, group = 1, color = "darkorchid4")) + 
  scale_color_manual(values = c("darkseagreen", "darkorchid4"), labels = c("Life Expectancy (rescaled)", "Years in School \nfor 15-24 y/o Women (rescaled)")) + 
  labs(color = "Rescaled Values", x = "Year", y = "", subtitle = "Rescaled Values", title = "General Life Expectancy and \nYears in School Over Time") + 
  scale_x_discrete(breaks = seq(1970, 2015, 5))

time_plot
```

In the above plot, we took the average value of each metric for a given year across all countries in the data set.

For the above plot, we chose to scale the values between 0 and 1. This is because the range of values for the two different metrics is very different, and thus plotting both of them on top of each other would make it difficult to see the plot. Mean years in school typically instantiates around 2 to 8, while mean life expectancy typically instantiates around 50 to 80. If both were plotted on top of each other without scaling, the resultant plot would make it very difficult to see the line representing mean years in school.

### Linear Regression Model

```{r}
# finding the average life expectancy and years in school across each country from 1970 to 2015
lin_data <- joined_data |>
  group_by(country) |>
  summarize(mean_life = mean(life_expectancy), 
            mean_school = mean(years_in_school, na.rm = TRUE))

# linear model with mean_school as the explanatory variable and mean_life as the response variable
model <- lm(mean_life ~ mean_school, data = lin_data)

intercept <- coef(model)[1]
slope <- coef(model)[2]
 
# estimated regression equation
broom::tidy(model)
```

```{r}
actual <- lin_data |>
  ggplot(aes(x=mean_school, y=mean_life)) +
  geom_point() +
  labs(x="Mean Years in School", y="", title="Years in School vs Life Expectancy", subtitle = "Mean Life Expectancy")

actual
```

### Model Fit

```{r}
resp_var <- var(joined_data$life_expectancy)
fitted_var <- var(model$fitted.values)
residual_var <- var(model$residuals)

# Create the table
table_data <- data.frame(
  Variance_Type = c("Response Values", "Fitted Values", "Residuals"),
  Variance = c(resp_var, fitted_var, residual_var)
)

formatted_table <- kable(table_data, align = "c", col.names = c("Variance Type", "Variance"))

formatted_table |>
  kable_paper() |>
  kable_styling(bootstrap_options = c("striped", "bordered")) |>
  column_spec(2, color = "cornsilk", background = "coral") |>
  kable_styling(html_font = "Gill Sans, sans-serif") 
```

The above table shows that the variance in our fitted values is larger than our variance in our residuals. This means that more of the variation is explained by our model than unexplained variation. The response values variation is the total variation in mean life expectancy, without regarding mean years in school.

#### Describing the statistical method (linear regression)

We utilized a linear regression model because there is a linear relationship between the two variables. In addition, each of the observations are independent as the variables in one country do not influence the variables in another country. Lastly, the residuals appear to be normally distributed and have equal variance.

#### Presenting the estimated regression model

predicted_life_expectancy = `r intercept` + `r slope`(mean years in school)

#### Interpreting the linear regression coefficients

For a given country, for every additional mean year in school for 15-24 year old women, we expect the life expectancy to increase by 2.39 years.

For a country with a mean of zero school years of 15-24 year old women, we expect the life expectancy for that country to be 48.84 years. Note: this is an extrapolation of the model, and thus may not be accurate.

#### Describing the fit of the regression model

The $R^{2}$ is 0.685 which means that 68.5% of the mean life expectancy can be explained from our model.

# 3. Simulation Predictions

### Visualizing Simulations from the Model

```{r}
noise <- function(x, mean=0, sd){
  x + rnorm(length(x),
            mean,
            sd)
}

predicted <- lin_data |>
  mutate(preds = noise(predict(model), 0, sigma(model))
) |>
  ggplot(aes(x=mean_school, y=preds)) +
  geom_point() +
  labs(x="Mean Years in School", y="", title="Years in School vs Predicted Life Expectancy", subtitle = "Predicted Mean Life Expectancy")

predicted
```

```{r}
grid.arrange(actual, predicted, ncol = 2)
```

In the plots above, the graph of predicted mean life expectancy appears similar to true mean life expectancy. However, we notice that the plotted points in our Predicted Life Expectancy vs. Mean Years in School are closer together than our Actual Life Expectancy vs. Mean Years in school, indicating that there may be a stronger correlation between the two variables in our predicted plot. Both plots indicate that there is a positive strong association between Actual or Predicted Life Expectancy with Mean Years in School.

### Generating Multiple Predictive Checks

```{r}
nsims <- 1000
sims <- map_dfc(.x = 1:nsims,
                 .f = ~tibble(sim = noise(predict(model), 0, 
                                          sigma(model))
                              ))

head(sims)
```

```{r}
colnames(sims) <- colnames(sims) |>
  str_replace(pattern = "\\.\\.\\.",
              replace = "_")
```

```{r}
sims <- lin_data |>
  select(mean_life) |>
  bind_cols(sims)
```

```{r}
sim_r_sq <- sims |>
  map(~ lm(mean_life ~ .x, data = sims)) |>
  map(glance) |>
  map_dbl(~ .x$r.squared)

sim_r_sq <- sim_r_sq[names(sim_r_sq) != "mean_life"]
```

```{r}
tibble(sims = sim_r_sq) |>
  ggplot(aes(x=sims)) +
  geom_histogram(binwidth = 0.01) +
  labs(x= expression("Simulated"~R^2),
       y="",
       title = "Distribution of R^2 Values from Regressions of Observed Dataset Against Simulated Dataset",
       subtitle="Number of Simulated Models") +
  theme_minimal()
```
